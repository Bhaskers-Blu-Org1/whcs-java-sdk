<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="145" passed="145">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="9846" started-at="2020-05-08T01:40:57 GMT" finished-at="2020-05-08T01:41:07 GMT">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="9846" started-at="2020-05-08T01:40:57 GMT" finished-at="2020-05-08T01:41:07 GMT">
      <class name="com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptionsTest">
        <test-method status="PASS" signature="testGetSimilarConceptsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptionsTest@5862dda4]" name="testGetSimilarConceptsOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimilarConceptsOptions -->
        <test-method status="PASS" signature="testGetSimilarConceptsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptionsTest@5862dda4]" name="testGetSimilarConceptsOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptions.<init>(GetSimilarConceptsOptions.java:151)
at com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptions$Builder.build(GetSimilarConceptsOptions.java:74)
at com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptionsTest.testGetSimilarConceptsOptionsError(GetSimilarConceptsOptionsTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimilarConceptsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetSimilarConceptsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptionsTest">
        <test-method status="PASS" signature="testDeleteCorpusSchemaOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptionsTest@2dfd157b]" name="testDeleteCorpusSchemaOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCorpusSchemaOptions -->
        <test-method status="PASS" signature="testDeleteCorpusSchemaOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptionsTest@2dfd157b]" name="testDeleteCorpusSchemaOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[instance cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: instance cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptions.<init>(DeleteCorpusSchemaOptions.java:71)
at com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptions$Builder.build(DeleteCorpusSchemaOptions.java:55)
at com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptionsTest.testDeleteCorpusSchemaOptionsError(DeleteCorpusSchemaOptionsTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCorpusSchemaOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.DeleteCorpusSchemaOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.MetadataFieldsTest">
        <test-method status="PASS" signature="testMetadataFields()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MetadataFieldsTest@11577ab8]" name="testMetadataFields" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMetadataFields -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.MetadataFieldsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SetCorpusSchemaOptionsTest">
        <test-method status="PASS" signature="testSetCorpusSchemaOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SetCorpusSchemaOptionsTest@57e6d56a]" name="testSetCorpusSchemaOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetCorpusSchemaOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SetCorpusSchemaOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AttributeTest">
        <test-method status="PASS" signature="testAttribute()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AttributeTest@749c0669]" name="testAttribute" duration-ms="5" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAttribute -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AttributeTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetServiceStatusOptionsTest">
        <test-method status="PASS" signature="testGetServiceStatusOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetServiceStatusOptionsTest@1368e2f7]" name="testGetServiceStatusOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetServiceStatusOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetServiceStatusOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetCorporaConfigOptionsTest">
        <test-method status="PASS" signature="testGetCorporaConfigOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetCorporaConfigOptionsTest@4edde05c]" name="testGetCorporaConfigOptions" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorporaConfigOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetCorporaConfigOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptionsTest">
        <test-method status="PASS" signature="testGetDocumentCategoriesOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptionsTest@488279d3]" name="testGetDocumentCategoriesOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentCategoriesOptions -->
        <test-method status="PASS" signature="testGetDocumentCategoriesOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptionsTest@488279d3]" name="testGetDocumentCategoriesOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptions.<init>(GetDocumentCategoriesOptions.java:217)
at com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptions$Builder.build(GetDocumentCategoriesOptions.java:96)
at com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptionsTest.testGetDocumentCategoriesOptionsError(GetDocumentCategoriesOptionsTest.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentCategoriesOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentCategoriesOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.MetadataModelTest">
        <test-method status="PASS" signature="testMetadataModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MetadataModelTest@361d8567]" name="testMetadataModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMetadataModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.MetadataModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptionsTest">
        <test-method status="PASS" signature="testGetDocumentAnnotationsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptionsTest@4891d727]" name="testGetDocumentAnnotationsOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentAnnotationsOptions -->
        <test-method status="PASS" signature="testGetDocumentAnnotationsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptionsTest@4891d727]" name="testGetDocumentAnnotationsOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptions.<init>(GetDocumentAnnotationsOptions.java:151)
at com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptions$Builder.build(GetDocumentAnnotationsOptions.java:74)
at com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptionsTest.testGetDocumentAnnotationsOptionsError(GetDocumentAnnotationsOptionsTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentAnnotationsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentAnnotationsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.QualiferTest">
        <test-method status="PASS" signature="testQualifer()[pri:0, instance:com.ibm.watson.health.iml.v1.model.QualiferTest@5c1687d1]" name="testQualifer" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifer -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.QualiferTest -->
      <class name="com.ibm.watson.health.iml.v1.model.MessageTest">
        <test-method status="PASS" signature="testMessage()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MessageTest@402676e3]" name="testMessage" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.MessageTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ConceptListModelTest">
        <test-method status="PASS" signature="testConceptListModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ConceptListModelTest@4d84688f]" name="testConceptListModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConceptListModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ConceptListModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SentenceModelTest">
        <test-method status="PASS" signature="testSentenceModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SentenceModelTest@7d2be319]" name="testSentenceModel" duration-ms="26" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSentenceModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SentenceModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetConceptsOptionsTest">
        <test-method status="PASS" signature="testGetConceptsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetConceptsOptionsTest@1831447c]" name="testGetConceptsOptions" duration-ms="9" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConceptsOptions -->
        <test-method status="PASS" signature="testGetConceptsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetConceptsOptionsTest@1831447c]" name="testGetConceptsOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetConceptsOptions.<init>(GetConceptsOptions.java:240)
at com.ibm.watson.health.iml.v1.model.GetConceptsOptions$Builder.build(GetConceptsOptions.java:79)
at com.ibm.watson.health.iml.v1.model.GetConceptsOptionsTest.testGetConceptsOptionsError(GetConceptsOptionsTest.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConceptsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetConceptsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.HistogramDataTest">
        <test-method status="PASS" signature="testHistogramData()[pri:0, instance:com.ibm.watson.health.iml.v1.model.HistogramDataTest@20a25f66]" name="testHistogramData" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHistogramData -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.HistogramDataTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptionsTest">
        <test-method status="PASS" signature="testGetSearchMatchesOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptionsTest@4ba1f425]" name="testGetSearchMatchesOptions" duration-ms="32" started-at="2020-05-08T01:40:57 GMT" finished-at="2020-05-08T01:40:57 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSearchMatchesOptions -->
        <test-method status="PASS" signature="testGetSearchMatchesOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptionsTest@4ba1f425]" name="testGetSearchMatchesOptionsError" duration-ms="1" started-at="2020-05-08T01:40:57 GMT" finished-at="2020-05-08T01:40:57 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptions.<init>(GetSearchMatchesOptions.java:376)
at com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptions$Builder.build(GetSearchMatchesOptions.java:104)
at com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptionsTest.testGetSearchMatchesOptionsError(GetSearchMatchesOptionsTest.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSearchMatchesOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetSearchMatchesOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RelationModelTest">
        <test-method status="PASS" signature="testRelationModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RelationModelTest@10b2c1cf]" name="testRelationModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelationModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RelationModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SearchMatchesModelTest">
        <test-method status="PASS" signature="testSearchMatchesModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SearchMatchesModelTest@6ad7a305]" name="testSearchMatchesModel" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchMatchesModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SearchMatchesModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetHealthCheckStatusOptionsTest">
        <test-method status="PASS" signature="testGetHealthCheckStatusOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetHealthCheckStatusOptionsTest@4023d23f]" name="testGetHealthCheckStatusOptions" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHealthCheckStatusOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetHealthCheckStatusOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.BackendTest">
        <test-method status="PASS" signature="testBackend()[pri:0, instance:com.ibm.watson.health.iml.v1.model.BackendTest@5703c1fb]" name="testBackend" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackend -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.BackendTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SetCorpusConfigOptionsTest">
        <test-method status="PASS" signature="testSetCorpusConfigOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SetCorpusConfigOptionsTest@27575bcd]" name="testSetCorpusConfigOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetCorpusConfigOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SetCorpusConfigOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RelatedConceptsModelTest">
        <test-method status="PASS" signature="testRelatedConceptsModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RelatedConceptsModelTest@1e7113f8]" name="testRelatedConceptsModel" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelatedConceptsModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RelatedConceptsModelTest -->
      <class name="com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestClass" is-config="true" duration-ms="4" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="2142" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:41:00 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1193" started-at="2020-05-08T01:41:00 GMT" finished-at="2020-05-08T01:41:01 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testAddArtifactNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testAddArtifactNoOptions" duration-ms="2360" started-at="2020-05-08T01:41:01 GMT" finished-at="2020-05-08T01:41:04 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[addArtifactOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: addArtifactOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.addArtifact(InsightsForMedicalLiteratureService.java:1111)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testAddArtifactNoOptions(InsightsForMedicalLiteratureServiceTest.java:1372)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddArtifactNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="8" started-at="2020-05-08T01:41:04 GMT" finished-at="2020-05-08T01:41:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="6" started-at="2020-05-08T01:41:04 GMT" finished-at="2020-05-08T01:41:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:04 GMT" finished-at="2020-05-08T01:41:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:04 GMT" finished-at="2020-05-08T01:41:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testAddArtifactWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testAddArtifactWOptions" duration-ms="842" started-at="2020-05-08T01:41:04 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddArtifactWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testAddCorpusDocumentNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testAddCorpusDocumentNoOptions" duration-ms="38" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[addCorpusDocumentOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: addCorpusDocumentOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.addCorpusDocument(InsightsForMedicalLiteratureService.java:251)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testAddCorpusDocumentNoOptions(InsightsForMedicalLiteratureServiceTest.java:255)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCorpusDocumentNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="8" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testAddCorpusDocumentWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testAddCorpusDocumentWOptions" duration-ms="62" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCorpusDocumentWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testConstructorWithNullAuthenticator()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testConstructorWithNullAuthenticator" duration-ms="77" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Authentication information was not properly configured.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Authentication information was not properly configured.
at com.ibm.cloud.sdk.core.service.BaseService.<init>(BaseService.java:100)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.<init>(InsightsForMedicalLiteratureService.java:179)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testConstructorWithNullAuthenticator(InsightsForMedicalLiteratureServiceTest.java:140)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorWithNullAuthenticator -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteCorpusSchemaNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testDeleteCorpusSchemaNoOptions" duration-ms="21" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[deleteCorpusSchemaOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: deleteCorpusSchemaOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.deleteCorpusSchema(InsightsForMedicalLiteratureService.java:677)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testDeleteCorpusSchemaNoOptions(InsightsForMedicalLiteratureServiceTest.java:739)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCorpusSchemaNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="6" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteCorpusSchemaWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testDeleteCorpusSchemaWOptions" duration-ms="54" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCorpusSchemaWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testEnableCorpusSearchTrackingWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testEnableCorpusSearchTrackingWOptions" duration-ms="66" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnableCorpusSearchTrackingWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetConceptsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetConceptsNoOptions" duration-ms="8" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getConceptsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getConceptsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getConcepts(InsightsForMedicalLiteratureService.java:1067)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetConceptsNoOptions(InsightsForMedicalLiteratureServiceTest.java:1289)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConceptsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="13" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="9" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetConceptsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetConceptsWOptions" duration-ms="69" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConceptsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetCorporaConfigWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetCorporaConfigWOptions" duration-ms="69" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorporaConfigWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetCorpusConfigNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetCorpusConfigNoOptions" duration-ms="7" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getCorpusConfigOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getCorpusConfigOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getCorpusConfig(InsightsForMedicalLiteratureService.java:820)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetCorpusConfigNoOptions(InsightsForMedicalLiteratureServiceTest.java:921)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorpusConfigNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetCorpusConfigWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetCorpusConfigWOptions" duration-ms="32" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorpusConfigWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="29" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="9" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetCuiInfoNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetCuiInfoNoOptions" duration-ms="10" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getCuiInfoOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getCuiInfoOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getCuiInfo(InsightsForMedicalLiteratureService.java:1145)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetCuiInfoNoOptions(InsightsForMedicalLiteratureServiceTest.java:1428)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCuiInfoNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetCuiInfoWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetCuiInfoWOptions" duration-ms="33" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCuiInfoWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="8" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentAnnotationsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentAnnotationsNoOptions" duration-ms="18" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getDocumentAnnotationsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getDocumentAnnotationsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getDocumentAnnotations(InsightsForMedicalLiteratureService.java:325)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetDocumentAnnotationsNoOptions(InsightsForMedicalLiteratureServiceTest.java:368)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentAnnotationsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="9" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentAnnotationsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentAnnotationsWOptions" duration-ms="55" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentAnnotationsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentCategoriesNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentCategoriesNoOptions" duration-ms="21" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getDocumentCategoriesOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getDocumentCategoriesOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getDocumentCategories(InsightsForMedicalLiteratureService.java:357)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetDocumentCategoriesNoOptions(InsightsForMedicalLiteratureServiceTest.java:433)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentCategoriesNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:05 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentCategoriesWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentCategoriesWOptions" duration-ms="94" started-at="2020-05-08T01:41:05 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentCategoriesWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentInfoNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentInfoNoOptions" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getDocumentInfoOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getDocumentInfoOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getDocumentInfo(InsightsForMedicalLiteratureService.java:297)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetDocumentInfoNoOptions(InsightsForMedicalLiteratureServiceTest.java:308)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentInfoNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentInfoWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentInfoWOptions" duration-ms="71" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentInfoWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetDocumentMultipleCategoriesNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentMultipleCategoriesNoOptions" duration-ms="6" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getDocumentMultipleCategoriesOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getDocumentMultipleCategoriesOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getDocumentMultipleCategories(InsightsForMedicalLiteratureService.java:429)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetDocumentMultipleCategoriesNoOptions(InsightsForMedicalLiteratureServiceTest.java:520)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentMultipleCategoriesNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetDocumentMultipleCategoriesWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentMultipleCategoriesWOptions" duration-ms="64" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentMultipleCategoriesWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="8" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentsNoOptions" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getDocumentsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getDocumentsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getDocuments(InsightsForMedicalLiteratureService.java:215)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetDocumentsNoOptions(InsightsForMedicalLiteratureServiceTest.java:196)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetDocumentsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetDocumentsWOptions" duration-ms="40" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetFieldsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetFieldsNoOptions" duration-ms="25" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getFieldsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getFieldsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getFields(InsightsForMedicalLiteratureService.java:992)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetFieldsNoOptions(InsightsForMedicalLiteratureServiceTest.java:1152)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFieldsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetFieldsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetFieldsWOptions" duration-ms="56" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFieldsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetHealthCheckStatusWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetHealthCheckStatusWOptions" duration-ms="42" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHealthCheckStatusWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetHitCountNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetHitCountNoOptions" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getHitCountOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getHitCountOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getHitCount(InsightsForMedicalLiteratureService.java:1179)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetHitCountNoOptions(InsightsForMedicalLiteratureServiceTest.java:1480)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHitCountNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="8" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetHitCountWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetHitCountWOptions" duration-ms="43" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHitCountWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetRelatedConceptsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetRelatedConceptsNoOptions" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getRelatedConceptsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getRelatedConceptsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getRelatedConcepts(InsightsForMedicalLiteratureService.java:1217)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetRelatedConceptsNoOptions(InsightsForMedicalLiteratureServiceTest.java:1547)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRelatedConceptsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetRelatedConceptsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetRelatedConceptsWOptions" duration-ms="49" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRelatedConceptsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetSearchMatchesNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetSearchMatchesNoOptions" duration-ms="14" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getSearchMatchesOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getSearchMatchesOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getSearchMatches(InsightsForMedicalLiteratureService.java:486)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetSearchMatchesNoOptions(InsightsForMedicalLiteratureServiceTest.java:601)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSearchMatchesNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetSearchMatchesWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetSearchMatchesWOptions" duration-ms="59" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSearchMatchesWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="13" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetServiceStatusWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetServiceStatusWOptions" duration-ms="21" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetServiceStatusWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetSimilarConceptsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetSimilarConceptsNoOptions" duration-ms="6" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getSimilarConceptsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getSimilarConceptsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getSimilarConcepts(InsightsForMedicalLiteratureService.java:1262)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetSimilarConceptsNoOptions(InsightsForMedicalLiteratureServiceTest.java:1604)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimilarConceptsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetSimilarConceptsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetSimilarConceptsWOptions" duration-ms="34" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimilarConceptsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetStatisticsNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetStatisticsNoOptions" duration-ms="10" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getStatisticsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getStatisticsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.getStatistics(InsightsForMedicalLiteratureService.java:848)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testGetStatisticsNoOptions(InsightsForMedicalLiteratureServiceTest.java:971)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStatisticsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetStatisticsWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetStatisticsWOptions" duration-ms="36" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStatisticsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetVersion()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testGetVersion" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVersion -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testMonitorCorpusNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testMonitorCorpusNoOptions" duration-ms="4" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[monitorCorpusOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: monitorCorpusOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.monitorCorpus(InsightsForMedicalLiteratureService.java:761)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testMonitorCorpusNoOptions(InsightsForMedicalLiteratureServiceTest.java:829)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonitorCorpusNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testMonitorCorpusWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testMonitorCorpusWOptions" duration-ms="16" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonitorCorpusWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testSearchNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testSearchNoOptions" duration-ms="5" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[searchOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: searchOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.search(InsightsForMedicalLiteratureService.java:957)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testSearchNoOptions(InsightsForMedicalLiteratureServiceTest.java:1102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:06 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testSearchWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testSearchWOptions" duration-ms="291" started-at="2020-05-08T01:41:06 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="10" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testSetCorpusConfigWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testSetCorpusConfigWOptions" duration-ms="24" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetCorpusConfigWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testSetCorpusSchemaWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testSetCorpusSchemaWOptions" duration-ms="31" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetCorpusSchemaWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="6" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="7" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testTokenizeNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testTokenizeNoOptions" duration-ms="27" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[tokenizeOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: tokenizeOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.tokenize(InsightsForMedicalLiteratureService.java:1294)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testTokenizeNoOptions(InsightsForMedicalLiteratureServiceTest.java:1659)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTokenizeNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testTokenizeWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testTokenizeWOptions" duration-ms="20" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTokenizeWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="4" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testTypeaheadNoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testTypeaheadNoOptions" duration-ms="4" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[typeaheadOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: typeaheadOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.InsightsForMedicalLiteratureService.typeahead(InsightsForMedicalLiteratureService.java:1019)
at com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest.testTypeaheadNoOptions(InsightsForMedicalLiteratureServiceTest.java:1219)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeaheadNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testTypeaheadWOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="testTypeaheadWOptions" duration-ms="25" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeaheadWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest@7348e75e]" name="afterPowerMockTestClass" is-config="true" duration-ms="1" started-at="2020-05-08T01:41:07 GMT" finished-at="2020-05-08T01:41:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ibm.watson.health.iml.v1.unit.InsightsForMedicalLiteratureServiceTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AttributeEntryTest">
        <test-method status="PASS" signature="testAttributeEntry()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AttributeEntryTest@7ee3a2ed]" name="testAttributeEntry" duration-ms="5" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAttributeEntry -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AttributeEntryTest -->
      <class name="com.ibm.watson.health.iml.v1.model.HitCountTest">
        <test-method status="PASS" signature="testHitCount()[pri:0, instance:com.ibm.watson.health.iml.v1.model.HitCountTest@41cf4272]" name="testHitCount" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHitCount -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.HitCountTest -->
      <class name="com.ibm.watson.health.iml.v1.model.StatModelTest">
        <test-method status="PASS" signature="testStatModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.StatModelTest@73fe7483]" name="testStatModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.StatModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.PossbileValuesTest">
        <test-method status="PASS" signature="testPossbileValues()[pri:0, instance:com.ibm.watson.health.iml.v1.model.PossbileValuesTest@550574cb]" name="testPossbileValues" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPossbileValues -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.PossbileValuesTest -->
      <class name="com.ibm.watson.health.iml.v1.model.DataModelTest">
        <test-method status="PASS" signature="testDataModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.DataModelTest@19de32cb]" name="testDataModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.DataModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.FieldOptionsTest">
        <test-method status="PASS" signature="testFieldOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.FieldOptionsTest@38363e96]" name="testFieldOptions" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFieldOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.FieldOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ConceptTest">
        <test-method status="PASS" signature="testConcept()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ConceptTest@2911db81]" name="testConcept" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConcept -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ConceptTest -->
      <class name="com.ibm.watson.health.iml.v1.model.DictonaryEntryTest">
        <test-method status="PASS" signature="testDictonaryEntry()[pri:0, instance:com.ibm.watson.health.iml.v1.model.DictonaryEntryTest@52c27d53]" name="testDictonaryEntry" duration-ms="4" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDictonaryEntry -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.DictonaryEntryTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptionsTest">
        <test-method status="PASS" signature="testGetRelatedConceptsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptionsTest@5ca7619f]" name="testGetRelatedConceptsOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRelatedConceptsOptions -->
        <test-method status="PASS" signature="testGetRelatedConceptsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptionsTest@5ca7619f]" name="testGetRelatedConceptsOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptions.<init>(GetRelatedConceptsOptions.java:282)
at com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptions$Builder.build(GetRelatedConceptsOptions.java:144)
at com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptionsTest.testGetRelatedConceptsOptionsError(GetRelatedConceptsOptionsTest.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRelatedConceptsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetRelatedConceptsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptionsTest">
        <test-method status="PASS" signature="testAddCorpusDocumentOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptionsTest@7fce1069]" name="testAddCorpusDocumentOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCorpusDocumentOptions -->
        <test-method status="PASS" signature="testAddCorpusDocumentOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptionsTest@7fce1069]" name="testAddCorpusDocumentOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptions.<init>(AddCorpusDocumentOptions.java:176)
at com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptions$Builder.build(AddCorpusDocumentOptions.java:77)
at com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptionsTest.testAddCorpusDocumentOptionsError(AddCorpusDocumentOptionsTest.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCorpusDocumentOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AddCorpusDocumentOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AggregationModelTest">
        <test-method status="PASS" signature="testAggregationModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AggregationModelTest@5513a46b]" name="testAggregationModel" duration-ms="6" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregationModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AggregationModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RankedDocLinksTest">
        <test-method status="PASS" signature="testRankedDocLinks()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RankedDocLinksTest@2fc435e9]" name="testRankedDocLinks" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRankedDocLinks -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RankedDocLinksTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentInfoResponseTest">
        <test-method status="PASS" signature="testGetDocumentInfoResponse()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentInfoResponseTest@21ed4a51]" name="testGetDocumentInfoResponse" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentInfoResponse -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentInfoResponseTest -->
      <class name="com.ibm.watson.health.iml.v1.model.MonitorCorpusOptionsTest">
        <test-method status="PASS" signature="testMonitorCorpusOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MonitorCorpusOptionsTest@37a0fc8c]" name="testMonitorCorpusOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonitorCorpusOptions -->
        <test-method status="PASS" signature="testMonitorCorpusOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MonitorCorpusOptionsTest@37a0fc8c]" name="testMonitorCorpusOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[apikey cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: apikey cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.iml.v1.model.MonitorCorpusOptions.<init>(MonitorCorpusOptions.java:71)
at com.ibm.watson.health.iml.v1.model.MonitorCorpusOptions$Builder.build(MonitorCorpusOptions.java:55)
at com.ibm.watson.health.iml.v1.model.MonitorCorpusOptionsTest.testMonitorCorpusOptionsError(MonitorCorpusOptionsTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonitorCorpusOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.MonitorCorpusOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetStatisticsOptionsTest">
        <test-method status="PASS" signature="testGetStatisticsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetStatisticsOptionsTest@57a0c261]" name="testGetStatisticsOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStatisticsOptions -->
        <test-method status="PASS" signature="testGetStatisticsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetStatisticsOptionsTest@57a0c261]" name="testGetStatisticsOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetStatisticsOptions.<init>(GetStatisticsOptions.java:71)
at com.ibm.watson.health.iml.v1.model.GetStatisticsOptions$Builder.build(GetStatisticsOptions.java:55)
at com.ibm.watson.health.iml.v1.model.GetStatisticsOptionsTest.testGetStatisticsOptionsError(GetStatisticsOptionsTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStatisticsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetStatisticsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.TypeaheadOptionsTest">
        <test-method status="PASS" signature="testTypeaheadOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.TypeaheadOptionsTest@3e149513]" name="testTypeaheadOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeaheadOptions -->
        <test-method status="PASS" signature="testTypeaheadOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.TypeaheadOptionsTest@3e149513]" name="testTypeaheadOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.TypeaheadOptions.<init>(TypeaheadOptions.java:241)
at com.ibm.watson.health.iml.v1.model.TypeaheadOptions$Builder.build(TypeaheadOptions.java:103)
at com.ibm.watson.health.iml.v1.model.TypeaheadOptionsTest.testTypeaheadOptionsError(TypeaheadOptionsTest.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeaheadOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.TypeaheadOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.EnableCorpusSearchTrackingOptionsTest">
        <test-method status="PASS" signature="testEnableCorpusSearchTrackingOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.EnableCorpusSearchTrackingOptionsTest@1a4ae53d]" name="testEnableCorpusSearchTrackingOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnableCorpusSearchTrackingOptions -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.EnableCorpusSearchTrackingOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptionsTest">
        <test-method status="PASS" signature="testGetDocumentMultipleCategoriesOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptionsTest@1504b493]" name="testGetDocumentMultipleCategoriesOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentMultipleCategoriesOptions -->
        <test-method status="PASS" signature="testGetDocumentMultipleCategoriesOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptionsTest@1504b493]" name="testGetDocumentMultipleCategoriesOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptions.<init>(GetDocumentMultipleCategoriesOptions.java:160)
at com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptions$Builder.build(GetDocumentMultipleCategoriesOptions.java:77)
at com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptionsTest.testGetDocumentMultipleCategoriesOptionsError(GetDocumentMultipleCategoriesOptionsTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentMultipleCategoriesOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentMultipleCategoriesOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.CorpusModelTest">
        <test-method status="PASS" signature="testCorpusModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.CorpusModelTest@fb42c1c]" name="testCorpusModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCorpusModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.CorpusModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.PassagesModelTest">
        <test-method status="PASS" signature="testPassagesModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.PassagesModelTest@104392ba]" name="testPassagesModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPassagesModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.PassagesModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetFieldsOptionsTest">
        <test-method status="PASS" signature="testGetFieldsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetFieldsOptionsTest@13866865]" name="testGetFieldsOptions" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFieldsOptions -->
        <test-method status="PASS" signature="testGetFieldsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetFieldsOptionsTest@13866865]" name="testGetFieldsOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetFieldsOptions.<init>(GetFieldsOptions.java:71)
at com.ibm.watson.health.iml.v1.model.GetFieldsOptions$Builder.build(GetFieldsOptions.java:55)
at com.ibm.watson.health.iml.v1.model.GetFieldsOptionsTest.testGetFieldsOptionsError(GetFieldsOptionsTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFieldsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetFieldsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptionsTest">
        <test-method status="PASS" signature="testGetDocumentInfoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptionsTest@627d5f1]" name="testGetDocumentInfoOptions" duration-ms="4" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentInfoOptions -->
        <test-method status="PASS" signature="testGetDocumentInfoOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptionsTest@627d5f1]" name="testGetDocumentInfoOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptions.<init>(GetDocumentInfoOptions.java:101)
at com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptions$Builder.build(GetDocumentInfoOptions.java:63)
at com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptionsTest.testGetDocumentInfoOptionsError(GetDocumentInfoOptionsTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentInfoOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentInfoOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.StringBuilderTest">
        <test-method status="PASS" signature="testStringBuilder()[pri:0, instance:com.ibm.watson.health.iml.v1.model.StringBuilderTest@7872e91f]" name="testStringBuilder" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringBuilder -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.StringBuilderTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RangeModelTest">
        <test-method status="PASS" signature="testRangeModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RangeModelTest@5e02fb23]" name="testRangeModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRangeModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RangeModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetDocumentsOptionsTest">
        <test-method status="PASS" signature="testGetDocumentsOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentsOptionsTest@4504a4ed]" name="testGetDocumentsOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentsOptions -->
        <test-method status="PASS" signature="testGetDocumentsOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetDocumentsOptionsTest@4504a4ed]" name="testGetDocumentsOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetDocumentsOptions.<init>(GetDocumentsOptions.java:71)
at com.ibm.watson.health.iml.v1.model.GetDocumentsOptions$Builder.build(GetDocumentsOptions.java:55)
at com.ibm.watson.health.iml.v1.model.GetDocumentsOptionsTest.testGetDocumentsOptionsError(GetDocumentsOptionsTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocumentsOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetDocumentsOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.BooleanOperandsTest">
        <test-method status="PASS" signature="testBooleanOperands()[pri:0, instance:com.ibm.watson.health.iml.v1.model.BooleanOperandsTest@53d2b827]" name="testBooleanOperands" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanOperands -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.BooleanOperandsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ConceptModelTest">
        <test-method status="PASS" signature="testConceptModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ConceptModelTest@4468c0ea]" name="testConceptModel" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConceptModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ConceptModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.UnstructuredModelTest">
        <test-method status="PASS" signature="testUnstructuredModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.UnstructuredModelTest@3fd6dfbc]" name="testUnstructuredModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnstructuredModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.UnstructuredModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AddArtifactOptionsTest">
        <test-method status="PASS" signature="testAddArtifactOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AddArtifactOptionsTest@29d563bd]" name="testAddArtifactOptions" duration-ms="275" started-at="2020-05-08T01:40:57 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddArtifactOptions -->
        <test-method status="PASS" signature="testAddArtifactOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AddArtifactOptionsTest@29d563bd]" name="testAddArtifactOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.AddArtifactOptions.<init>(AddArtifactOptions.java:99)
at com.ibm.watson.health.iml.v1.model.AddArtifactOptions$Builder.build(AddArtifactOptions.java:61)
at com.ibm.watson.health.iml.v1.model.AddArtifactOptionsTest.testAddArtifactOptionsError(AddArtifactOptionsTest.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddArtifactOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AddArtifactOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.CommonDataModelTest">
        <test-method status="PASS" signature="testCommonDataModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.CommonDataModelTest@51b41740]" name="testCommonDataModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCommonDataModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.CommonDataModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptionsTest">
        <test-method status="PASS" signature="testGetCorpusConfigOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptionsTest@64381526]" name="testGetCorpusConfigOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorpusConfigOptions -->
        <test-method status="PASS" signature="testGetCorpusConfigOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptionsTest@64381526]" name="testGetCorpusConfigOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptions.<init>(GetCorpusConfigOptions.java:85)
at com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptions$Builder.build(GetCorpusConfigOptions.java:58)
at com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptionsTest.testGetCorpusConfigOptionsError(GetCorpusConfigOptionsTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCorpusConfigOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetCorpusConfigOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.CategoriesModelTest">
        <test-method status="PASS" signature="testCategoriesModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.CategoriesModelTest@9a37591]" name="testCategoriesModel" duration-ms="46" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCategoriesModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.CategoriesModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ConceptInfoModelTest">
        <test-method status="PASS" signature="testConceptInfoModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ConceptInfoModelTest@70cac22a]" name="testConceptInfoModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConceptInfoModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ConceptInfoModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.TokenizeOptionsTest">
        <test-method status="PASS" signature="testTokenizeOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.TokenizeOptionsTest@1ba3c03d]" name="testTokenizeOptions" duration-ms="4" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTokenizeOptions -->
        <test-method status="PASS" signature="testTokenizeOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.TokenizeOptionsTest@1ba3c03d]" name="testTokenizeOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.TokenizeOptions.<init>(TokenizeOptions.java:158)
at com.ibm.watson.health.iml.v1.model.TokenizeOptions$Builder.build(TokenizeOptions.java:81)
at com.ibm.watson.health.iml.v1.model.TokenizeOptionsTest.testTokenizeOptionsError(TokenizeOptionsTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTokenizeOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.TokenizeOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ArtifactModelTest">
        <test-method status="PASS" signature="testArtifactModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ArtifactModelTest@208185c0]" name="testArtifactModel" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArtifactModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ArtifactModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.CorporaConfigTest">
        <test-method status="PASS" signature="testCorporaConfig()[pri:0, instance:com.ibm.watson.health.iml.v1.model.CorporaConfigTest@105fe81e]" name="testCorporaConfig" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCorporaConfig -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.CorporaConfigTest -->
      <class name="com.ibm.watson.health.iml.v1.model.ServiceStatusTest">
        <test-method status="PASS" signature="testServiceStatus()[pri:0, instance:com.ibm.watson.health.iml.v1.model.ServiceStatusTest@46290193]" name="testServiceStatus" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServiceStatus -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.ServiceStatusTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SearchModelTest">
        <test-method status="PASS" signature="testSearchModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SearchModelTest@787a4519]" name="testSearchModel" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SearchModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.TextSpanTest">
        <test-method status="PASS" signature="testTextSpan()[pri:0, instance:com.ibm.watson.health.iml.v1.model.TextSpanTest@5b71af0d]" name="testTextSpan" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextSpan -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.TextSpanTest -->
      <class name="com.ibm.watson.health.iml.v1.model.StatisticsModelTest">
        <test-method status="PASS" signature="testStatisticsModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.StatisticsModelTest@3ee68eb2]" name="testStatisticsModel" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatisticsModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.StatisticsModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.EntryModelTest">
        <test-method status="PASS" signature="testEntryModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.EntryModelTest@35c95869]" name="testEntryModel" duration-ms="13" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEntryModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.EntryModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.PassageTest">
        <test-method status="PASS" signature="testPassage()[pri:0, instance:com.ibm.watson.health.iml.v1.model.PassageTest@4769537a]" name="testPassage" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPassage -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.PassageTest -->
      <class name="com.ibm.watson.health.iml.v1.model.MatchEntryTest">
        <test-method status="PASS" signature="testMatchEntry()[pri:0, instance:com.ibm.watson.health.iml.v1.model.MatchEntryTest@fe09374]" name="testMatchEntry" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchEntry -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.MatchEntryTest -->
      <class name="com.ibm.watson.health.iml.v1.model.BoolOperandTest">
        <test-method status="PASS" signature="testBoolOperand()[pri:0, instance:com.ibm.watson.health.iml.v1.model.BoolOperandTest@35d3202b]" name="testBoolOperand" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolOperand -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.BoolOperandTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetCuiInfoOptionsTest">
        <test-method status="PASS" signature="testGetCuiInfoOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetCuiInfoOptionsTest@558aa1f1]" name="testGetCuiInfoOptions" duration-ms="9" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCuiInfoOptions -->
        <test-method status="PASS" signature="testGetCuiInfoOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetCuiInfoOptionsTest@558aa1f1]" name="testGetCuiInfoOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetCuiInfoOptions.<init>(GetCuiInfoOptions.java:129)
at com.ibm.watson.health.iml.v1.model.GetCuiInfoOptions$Builder.build(GetCuiInfoOptions.java:69)
at com.ibm.watson.health.iml.v1.model.GetCuiInfoOptionsTest.testGetCuiInfoOptionsError(GetCuiInfoOptionsTest.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCuiInfoOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetCuiInfoOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.CountTest">
        <test-method status="PASS" signature="testCount()[pri:0, instance:com.ibm.watson.health.iml.v1.model.CountTest@bf18412]" name="testCount" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCount -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.CountTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RelatedConceptModelTest">
        <test-method status="PASS" signature="testRelatedConceptModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RelatedConceptModelTest@5759edff]" name="testRelatedConceptModel" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelatedConceptModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RelatedConceptModelTest -->
      <class name="com.ibm.watson.health.iml.v1.model.GetHitCountOptionsTest">
        <test-method status="PASS" signature="testGetHitCountOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetHitCountOptionsTest@7741507c]" name="testGetHitCountOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHitCountOptions -->
        <test-method status="PASS" signature="testGetHitCountOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.GetHitCountOptionsTest@7741507c]" name="testGetHitCountOptionsError" duration-ms="1" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.GetHitCountOptions.<init>(GetHitCountOptions.java:101)
at com.ibm.watson.health.iml.v1.model.GetHitCountOptions$Builder.build(GetHitCountOptions.java:63)
at com.ibm.watson.health.iml.v1.model.GetHitCountOptionsTest.testGetHitCountOptionsError(GetHitCountOptionsTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHitCountOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.GetHitCountOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.RankedDocumentTest">
        <test-method status="PASS" signature="testRankedDocument()[pri:0, instance:com.ibm.watson.health.iml.v1.model.RankedDocumentTest@af94b0b]" name="testRankedDocument" duration-ms="2" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRankedDocument -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.RankedDocumentTest -->
      <class name="com.ibm.watson.health.iml.v1.model.SearchOptionsTest">
        <test-method status="PASS" signature="testSearchOptions()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SearchOptionsTest@299ddfff]" name="testSearchOptions" duration-ms="3" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchOptions -->
        <test-method status="PASS" signature="testSearchOptionsError()[pri:0, instance:com.ibm.watson.health.iml.v1.model.SearchOptionsTest@299ddfff]" name="testSearchOptionsError" duration-ms="0" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[corpus cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: corpus cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.iml.v1.model.SearchOptions.<init>(SearchOptions.java:118)
at com.ibm.watson.health.iml.v1.model.SearchOptions$Builder.build(SearchOptions.java:69)
at com.ibm.watson.health.iml.v1.model.SearchOptionsTest.testSearchOptionsError(SearchOptionsTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchOptionsError -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.SearchOptionsTest -->
      <class name="com.ibm.watson.health.iml.v1.model.AnnotationModelTest">
        <test-method status="PASS" signature="testAnnotationModel()[pri:0, instance:com.ibm.watson.health.iml.v1.model.AnnotationModelTest@5da2966]" name="testAnnotationModel" duration-ms="23" started-at="2020-05-08T01:40:58 GMT" finished-at="2020-05-08T01:40:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotationModel -->
      </class> <!-- com.ibm.watson.health.iml.v1.model.AnnotationModelTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
